$font-sizes: (
  mobile: (
    xs: 0.75rem,     // 12px
    sm: 0.875rem,    // 14px
    base: 1rem,      // 16px
    lg: 1.125rem,    // 18px
    xl: 1.25rem,     // 20px
    '2xl': 1.5rem,   // 24px
    '3xl': 1.875rem, // 30px
    '4xl': 2.25rem   // 36px
  ),
  tablet: (
    xs: 0.75rem,     // 12px
    sm: 0.875rem,    // 14px
    base: 1rem,      // 16px
    lg: 1.25rem,     // 20px
    xl: 1.5rem,      // 24px
    '2xl': 1.875rem, // 30px
    '3xl': 2.25rem,  // 36px
    '4xl': 2.5rem    // 40px
  ),
  desktop: (
    xs: 0.875rem,    // 14px
    sm: 1rem,        // 16px
    base: 1.125rem,  // 18px
    lg: 1.375rem,    // 22px
    xl: 1.75rem,     // 28px
    '2xl': 2rem,     // 32px
    '3xl': 2.5rem,   // 40px
    '4xl': 3rem      // 48px
  )
);

@mixin text-size($size) {
  @each $breakpoint, $sizes in $font-sizes {
    @if map-has-key($sizes, $size) {
      @if $breakpoint == mobile { //모바일 기본
        font-size: map-get($sizes, $size);
      } @else {
        @include responsive($breakpoint) {
          font-size: map-get($sizes, $size);
        }
      }
    } @else {
      @error "Invalid font size `#{$size}` for breakpoint `#{$breakpoint}`";
    }
  }
}

// 유틸리티 클래스 생성
@each $size-name, $_ in map-get($font-sizes, mobile) {
  .text-#{$size-name} {
    @include text-size($size-name);
  }
}